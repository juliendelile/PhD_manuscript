#!/bin/bash


#Part 1: generate the config.js file that contains associative arrays linking page IDs to their path, depth and title

echo "//generated by config_generate. Do no modify..." > config.js
echo "var filepath = new Array();" >> config.js
echo "var relativepathcorrection = new Array();" >> config.js
echo "var pagetitle = new Array();" >> config.js
echo "var idpage = new Array();" >> config.js

numpage=1;
#main index.html is manually filled. idpage -> 0
echo "filepath[0] = \"index.html\";" >> config.js
echo "relativepathcorrection[0] = \"\";" >> config.js
echo "pagetitle[0] = \"\";" >> config.js
echo "idpage[0] = 0;" >> config.js

fillConfig(){
	
	#extract IDpage
	
	#extract the line that contains Idpage
	idpage=`awk '/var IDpage = /,/;/' $1`

	#echo "$idpage"

	#remove part of the line before IDpage
	idpage=${idpage#*IDpage = }
	
	#echo "$idpage"

	#remove part of the line after IDpage
	idpage=${idpage%;*}
	
	#echo "$idpage"
	
	#extract page title
	
	#extract the line that contains the title
	title=`awk '/var titlepage = /,/;/' $1`

	#echo "$title"

	#remove part of the line before titlepage
	title=${title#*titlepage = \"}
	
	#echo "$title"

	#remove part of the line after titlepage
	title=${title%\";*}
	
	echo "$idpage    $title"
	

	#extract file path like page/folder1/folder2
	
	#remove ../
	filepath=${1#*/}
	#remove /index.html
	filepath=${filepath%index*}
	
	#build relative path from depth
	relative="../"
	for (( i=0; i<$2; i++ )){
		relative=$relative"../"
	}
	
	
	echo "filepath[$idpage] = \"$filepath\";" >> config.js
	echo "relativepathcorrection[$idpage] = \"$relative\";" >> config.js
	echo "pagetitle[$idpage] = \"$title\";" >> config.js
	
	#echo "file $1   idpage:$idpage     title:$title   filepath:$filepath  relative:$relative"
	
	
	bfilepath[$idpage]=$filepath
	brelativepathcorrection[$idpage]=$relative
	bpagetitle[$idpage]=$title
	
	echo "idpage[$numpage] = $idpage;" >> config.js
	let "numpage += 1"
}

recurse() {

local level=0
let "level = $2 + 1"

#echo "folder $1   depth $level"

 for i in "$1"/*;do
    if [ -d "$i" ];then
        recurse "$i" $level
    elif [ -f "$i" ]; then	#we could check here if the file name is index.html (later if needed)
        fillConfig "$i" $level
    fi
 done
}

#Get each page information and write config.js
#walk all folder in /page/ 
 for i in "../page"/*;do
    if [ -d "$i" ];then
        recurse "$i" 0
    fi
 done
 
 echo "var numpage = $numpage;" >> config.js
 
 
#Part 2: write the menu in each index.html
#the href are simply given by the id and another function will convert them later...

menuHTML="<li><a href='home'>Home</a></li><li><a href='manuscript'>Manuscript</a></li>"

recurseMenu() {
	
#extract IDpage
idpage=`awk '/var IDpage = /,/;/' $1/index.html`
idpage=${idpage#*IDpage = }
idpage=${idpage%;*}
	
menuHTML="$menuHTML<li><a href='$idpage'>${bpagetitle[$idpage]}</a>"

local subdircount=`find $1 -maxdepth 1 -type d | wc -l`

#if the directory contains subdirectory/ies, prepare ul list
if [ $subdircount -gt 1 ];then
	menuHTML="$menuHTML<ul>"
fi

 for i in "$1"/*;do
    if [ -d "$i" ];then  
        recurseMenu "$i"
    fi
 done
 
if [ $subdircount -gt 1 ];then
	menuHTML="$menuHTML</ul>"
fi

menuHTML="$menuHTML</li>"

}

#walk all folder in /page/ 
 for i in "../page"/*;do
    if [ -d "$i" ];then
        recurseMenu "$i"
    fi
 done



echo "var menuHTML = \"$menuHTML\";" >> config.js

