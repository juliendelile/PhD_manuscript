#!/bin/bash
#generate the table of contents from a simple file "outline.txt" which line start by a dot followed by N tabs. N represents the depth of the item

#echo "output outline generated by generate_HTMLoutline" > outline.html

number_depth[1]=1
number_depth[2]=1
number_depth[3]=1
number_depth[4]=1
number_depth[5]=1
number_depth[6]=1

previousdepth=0
item_num=0



#backup old toc.html and ids.js files

mv ../../manuscript/pragma/toc.html ../../manuscript/pragma/toc_old.html
mv ../../manuscript/pragma/ids.js ../../manuscript/pragma/ids_old.js



tocfile="../../manuscript/pragma/toc.html"
#cat index_before.html > $tocfile
echo "" > $tocfile

# echo "<div id=\"title\">From Cell Behavior to Tissue Deformation:  <br />Computational Modeling and Simulation of <br />Early Animal Embryogenesis</div>" >> $tocfile
echo "<div id=\"title\">From Cell Behavior to Embryonic Morphogenesis: <br />Mechanogenetic Modeling and Computational Simulation <br />of Early Animal Development</div>" >> $tocfile
echo "<div id=\"subtitle\">PhD Dissertation by Julien Delile <br />Supervised by Nadine Peyriéras and René Doursat</div>" >> $tocfile

echo "<div><a href=\"http://public.iscpif.fr/~delile/files/manuscript_pdf/Delile_thesis_jury.pdf\" id=\"pdf\" style=\"font-weight:bold;\">Download manuscript PDF <img src="../../pdf.jpg" width="20"></a></div>" >> $tocfile

echo "<div><a href=\"../../slides/index.html\" id=\"pdf\" style=\"font-weight:bold;\">View defense slides online (without movies) <img src="../../html5_logo.png" width="20"></a></div>" >> $tocfile

echo "<div><a href=\"../../slides/defense_slides.pdf\" id=\"pdf\" style=\"font-weight:bold;\">Download defense slides PDF (without movies) <img src="../../pdf.jpg" width="20"></a></div>" >> $tocfile

echo "<div><a href=\"http://public.iscpif.fr/~delile/files/defense_key/sketch_v2.key\" id=\"pdf\" style=\"font-weight:bold;\">Download defense slides Keynote (with movies, 1.4 Go) <img src="../../keynote_logo.png" width="20"></a></div>" >> $tocfile


# echo "<div><a href=\"http://public.iscpif.fr/~delile/files/manuscript_pdf/Delile_paper_draft_Computational_Systems_Biology.pdf\" id=\"pdf\" style=\"font-weight:bold;font-style:italic;\">Download paper draft <img src="../../pdf.jpg" width="20"></a></div>" >> $tocfile
# echo "<div id=\"pdf\" style=\"font-style:italic;color:black;\">to be submitted to a journal, and included as a chapter in the upcoming 2nd edition of the book <a href=\"http://www.amazon.com/Computational-Systems-Biology-Andres-Kriete/dp/012088786X\">Computational Systems Biology</a> (2013)</div>" >> $tocfile


echo "<br/>" >> $tocfile
echo "<div style=\"color:rgb(0,200,0);font-weight:bold;padding-top:30px;\">Sections that contain videos (microscopy imaging or simulations) are highlighted in green.</div>" >> $tocfile

#echo "<div id=\"toc_title\">Table of Contents</div>" >> $tocfile
echo "<div id=\"toc_content\">" >> $tocfile

echo "<li><a onclick=\"loadAbstract()\" class=\"item_good\" style=\"font-weight:bold;\">Abstract  </a></li>" >> $tocfile

echo "<li><a onclick=\"loadAcknowledgments()\" class=\"item_done\" style=\"font-weight:bold;\">Acknowledgments  </a></li>" >> $tocfile

idsfile="../../manuscript/pragma/ids.js"
echo "var ids = new Array();" > $idsfile
echo "var pages = new Array();" >> $idsfile


func(){

while read line; do
	
	#extract the number of tab in the line, between 0 and ...
	numtab=`echo "$line" | awk '{print gsub(/\t/,"")}'`
	#echo "$numtab in : $line"

	#extract the N+1 characters of the line : N tabs and the dot
	let "numtab += 2"
	newline=`echo "$line" | cut -c $numtab-`
	#echo "$newline"
	#remove status (last character)
	status_code=${newline#${newline%?}}
	newline=${newline%?}
	#echo "status $status_code"
	#echo "$newline"

	if [ $status_code == 0 ];then
		status="item_empty"
	elif [ $status_code == 1 ];then
		status="item_good"
	elif [ $status_code == 2 ];then
		status="item_soon_to_be_good"
	elif [ $status_code == 3 ];then
		status="item_red"
	elif [ $status_code == 4 ];then
		status="item_video"
	fi

	#depth is the number of tab + 1, between 1 and ...
	let currentdepth=$numtab-1
	#echo "currentdepth $currentdepth"
	
	#correct number
	if [ $currentdepth -gt $previousdepth ];then
		number_depth[$currentdepth]=1
	else
		let number_depth[$currentdepth]+=1
	fi

	#generate number prefix X.X.X...
	numbers=""
	for (( i=0; i<$currentdepth; i++ )){
		numbers=$numbers"${number_depth[i+1]}_"
	}

	numbers_dot=${numbers//'_'/"."}

	#replace space by _
	newline_=${newline//' '/"_"}
	#echo "new : $newline_"
	#echo "numbers $numbers"
	

	#indentation in toc
	if [ $item_num -gt 0 ];then
		if [ $currentdepth -gt $previousdepth ];then
			echo "<ul>" >> $tocfile
		elif [ $currentdepth -lt $previousdepth ];then
			lu=""
			for (( i=0; i<$previousdepth-$currentdepth; i++ )){
				lu=$lu"</ul>"
			}
			echo "$lu" >> $tocfile
		fi
	fi

	#inster PartI and Part II
	if [ $item_num == 14 ];then
		echo "<li style=\"margin-top: 50px;\"><a class=\"item_part\">PART I: A GENERIC MODEL OF MULTICELLULAR DEVELOPMENT</a></li>" >> $tocfile
	elif [ $item_num == 61 ];then
		echo "<li style=\"margin-top: 50px;\"><a class=\"item_part\">PART II: STUDY OF THE ZEBRAFISH EARLY EMBRYOGENESIS</a></li>" >> $tocfile
	fi		

	#start/finish chapter files
	style=""
	style_top=""
	if [ $currentdepth == 1 ];then
		
		#if [ $item_num -gt 0 ];then
			#complete chapter file
			#cat index_after.html >> $currentfile
		#fi
		
		#update chapter file name
		currentfile="$numbers$newline_.html"

		#init chapter file
		#cat index_before.html > $currentfile
		echo "" > $currentfile

		style="style=\"font-weight:bold;\""
		style_top="style=\"margin-top:40px;\""

	fi
	
	#no number if depth >= 3
	if [[ $currentdepth -lt 4 ]]; then
		if [ $status_code == 0 ];then
			echo "<li $style_top><a class=\"$status\" $style>$numbers_dot $newline </a></li>" >> $tocfile
		else
			echo "<li $style_top><a onclick=\"loadContentAt($item_num)\" class=\"$status\" $style>$numbers_dot $newline </a></li>" >> $tocfile
		fi
	else
		echo "<li><a onclick=\"loadContentAt($item_num)\" class=\"$status\" $style>$newline </a></li>" >> $tocfile
	fi

	#update chapter file
	echo " " >> $currentfile
	echo " " >> $currentfile
	echo " " >> $currentfile

	#echo "<p>$numbers_dot $newline </p>" >> $currentfile	

	echo " " >> $currentfile
	
	echo "<div id='$numbers'>" >> $currentfile
	
	#echo "<p><strong>$numbers_dot $newline </strong></p>" >> $currentfile	

	headersize=$currentdepth

	#limit section name to h1 and h2 even if depth is 3 or 4
	#if [[ $headersize -gt 1 ]]; then
	#	headersize=2
	#fi

	echo "<h$headersize>$numbers_dot $newline </h$headersize>" >> $currentfile

	echo " " >> $currentfile
	


	#cat lorem_ipsum.html >> $currentfile
	
	echo " " >> $currentfile
	
	echo "</div>" >> $currentfile
	
	
	for (( i=0; i<40; i++ )){
		echo " " >> $currentfile
	}
	
	
	#echo "<h$currentdepth>$numbers $newline</h$currentdepth>" >> outline.html
	

	#complete ids
	echo "ids[$item_num] = \"$numbers\";" >> $idsfile
	echo "pages[$item_num] = \"$currentfile\";" >> $idsfile
	
	
	let previousdepth=$currentdepth

	let item_num=$item_num+1

done < "$1"
	

	
# echo "</ul></ul></ul><li><a class=\"item_empty\" style=\"font-weight:bold;\">Annex  </a></li>" >> $tocfile



	#complete last chapter file
	#cat index_after.html >> $currentfile
	
	#complete toc
	#cat index_after.html >> $tocfile
	

}

func ../outline.txt